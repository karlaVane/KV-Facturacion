# Generated by Django 4.0.1 on 2022-01-24 06:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actualizaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_actualizacion', models.CharField(max_length=50)),
                ('ultima_fecha_pedido', models.CharField(max_length=50)),
                ('ultimo_num_pedido', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Consumidor',
            fields=[
                ('identificacion', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=500)),
                ('correo', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=300)),
                ('telefono', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Contribuyente',
            fields=[
                ('RUC', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('razon_social', models.CharField(max_length=40, verbose_name='Razón social')),
                ('url_tienda', models.CharField(max_length=300, verbose_name='URL Tienda')),
                ('consumer_key', models.CharField(max_length=100)),
                ('consumer_secret', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=50, verbose_name='Dirección')),
                ('contabilidad', models.BooleanField()),
                ('telefono', models.CharField(max_length=10, verbose_name='Teléfono')),
                ('firma_electronica', models.FileField(upload_to='')),
                ('fecha_caducidad', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('num_comprobante', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('tipo_ambiente', models.CharField(max_length=2)),
                ('clave_acceso', models.CharField(max_length=49)),
                ('serie', models.CharField(max_length=6)),
                ('digito_verificador', models.CharField(max_length=1)),
                ('tipo_emision', models.IntegerField(default=1)),
                ('fecha_emision', models.DateTimeField(auto_now_add=True)),
                ('num_gr', models.CharField(max_length=30)),
                ('documento', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Establecimiento',
            fields=[
                ('num_establecimiento', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('nombre_establecimiento', models.CharField(max_length=50)),
                ('id_usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facturacion.contribuyente')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_comprobante',
            fields=[
                ('cod_comprobante', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='Código comprobante')),
                ('nombre_comprobante', models.CharField(max_length=50, verbose_name='Nombre comprobante')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Valores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_valor', models.CharField(max_length=30)),
                ('valor', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('id_documento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facturacion.documento')),
            ],
        ),
        migrations.CreateModel(
            name='Punto_emision',
            fields=[
                ('num_punto_emision', models.CharField(max_length=3, primary_key=True, serialize=False, verbose_name='Num. Punto de emisión')),
                ('nombre_punto_emision', models.CharField(max_length=30, verbose_name='Nombre Punto de emisión')),
                ('establecimiento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facturacion.establecimiento')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('num_pedido', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('fecha_pedido', models.CharField(max_length=50)),
                ('estado_pedido', models.CharField(max_length=20)),
                ('envio', models.BooleanField(default=False)),
                ('href_pedido', models.URLField()),
                ('valor_total', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('total_impuestos', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('valor_transporte', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('id_consumidor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facturacion.consumidor')),
                ('id_contribuyente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facturacion.contribuyente')),
            ],
        ),
        migrations.AddField(
            model_name='documento',
            name='id_pedido',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Facturacion.pedido'),
        ),
        migrations.AddField(
            model_name='documento',
            name='id_usuario',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facturacion.contribuyente'),
        ),
        migrations.AddField(
            model_name='documento',
            name='tipo_comprobante',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facturacion.tipo_comprobante'),
        ),
        migrations.CreateModel(
            name='Detalle_pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_prod', models.CharField(max_length=100)),
                ('cantidad', models.IntegerField()),
                ('valor_unitario', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('subtotal', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('subtotal_impuestos', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('id_pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Facturacion.pedido')),
            ],
        ),
        migrations.AddField(
            model_name='contribuyente',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
